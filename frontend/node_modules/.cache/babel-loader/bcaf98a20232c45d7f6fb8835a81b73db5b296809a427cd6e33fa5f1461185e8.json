{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    id: \"username-input\",\n    placeholder: \"Digite o nome do usuário\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.formData.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.name]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    placeholder: \"Digite o email do usuário\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.formData.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    name: \"datanasc\",\n    id: \"data\",\n    placeholder: \"Digite o nome do usuário\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.formData.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.name]])])]);\n}","map":{"version":3,"mappings":";;uBACIA,oBAOM,cANFC,oBAKG,+BAJHA,oBAAsH;IAA/GC,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,gBAAgB;IAACC,WAAW,EAAC,0BAA0B;+DAAUC,cAAQ,CAACH,IAAI;iDAAbG,cAAQ,CAACH,IAAI,qBACpHF,oBAA6G;IAAtGC,IAAI,EAAC,OAAO;IAACC,IAAI,EAAC,OAAO;IAACC,EAAE,EAAC,OAAO;IAACC,WAAW,EAAC,2BAA2B;+DAAUC,cAAQ,CAACC,KAAK;iDAAdD,cAAQ,CAACC,KAAK,qBAC3GN,oBAA4G;IAArGC,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,MAAM;IAACC,WAAW,EAAC,0BAA0B;+DAAUC,cAAQ,CAACH,IAAI;iDAAbG,cAAQ,CAACH,IAAI","names":["_createElementBlock","_createElementVNode","type","name","id","placeholder","$data","email"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\PinkSour\\frontend\\src\\views\\CadastroView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <form>\r\n        <input type=\"text\" name=\"username\" id=\"username-input\" placeholder=\"Digite o nome do usuário\" v-model=\"formData.name\">\r\n        <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Digite o email do usuário\" v-model=\"formData.email\">\r\n        <input type=\"date\" name=\"datanasc\" id=\"data\" placeholder=\"Digite o nome do usuário\" v-model=\"formData.name\">\r\n    \r\n    </form>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nconst api = axios.create({\r\n baseURL: \"http://localhost:8080/api/\",\r\n});\r\nexport default {\r\n    name: 'EntrarTela',\r\n    \r\n    data(){\r\n        return {\r\n            formData:{},\r\n            error: {\r\n                validate:false,\r\n                message:'',\r\n            }\r\n        }\r\n    },\r\n    \r\n   async created() {\r\n\r\n\tlet results = await axios.get('http://localhost:8000/api/clientes');\r\n\r\n\tthis.clientes = results.data;\r\n\r\n},\r\nasync addUser(data) {\r\n\r\n\tif (!data.name) {\r\n\t\talert('Informe o nome');\r\n\t} else if (!data.email) {\r\n\t\talert('Informe o email');\r\n\t} else {\r\n\r\n\t\tlet results = await axios.post(`${server}/clientes`, data);\r\n\r\n\t\tthis.clientes.push({\r\n\t\t\tid: results.data.id,\r\n\t\t\tname: results.data.name,\r\n\t\t\temail: results.data.email\r\n\t\t});\r\n\r\n\t}\r\n\r\n}\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
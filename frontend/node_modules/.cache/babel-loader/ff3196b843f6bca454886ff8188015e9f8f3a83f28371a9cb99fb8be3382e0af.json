{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, [/*#__PURE__*/_createElementVNode(\"img\", {\n  id: \"garrafa\",\n  width: \"160px\",\n  src: \"/img/black.png\"\n}), /*#__PURE__*/_createTextVNode(\"Cadastre-se\"), /*#__PURE__*/_createElementVNode(\"img\", {\n  id: \"garrafa\",\n  width: \"160px\",\n  src: \"/img/black.png\"\n})], -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"password\",\n  name: \"repsenha\",\n  id: \"repsenha\",\n  placeholder: \"Repetir senha\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [$data.error.validate ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString($data.error.message), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _hoisted_2, _createElementVNode(\"form\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"nome\",\n    id: \"nome\",\n    placeholder: \"Digite o nome do usu치rio\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.formData.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.name]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    placeholder: \"Digite o email do usu치rio\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.formData.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    name: \"datanasc\",\n    id: \"data\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.formData.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.name]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    name: \"senha\",\n    id: \"senha\",\n    placeholder: \"Senha\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.formData.senha = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.senha]]), _hoisted_3, _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.registerUser && $options.registerUser(...args))\n  }, \"< Cadastrar />\")])]);\n}","map":{"version":3,"mappings":";;;EAEmCA,KAAK,EAAC;;gCACjCC,oBAA8H,0BAA1HA,oBAAqD;EAAhDC,EAAE,EAAC,SAAS;EAACC,KAAK,EAAC,OAAO;EAACC,GAAG,EAAC;kCAAiB,aAAW,oCAAqD;EAAhDF,EAAE,EAAC,SAAS;EAACC,KAAK,EAAC,OAAO;EAACC,GAAG,EAAC;;gCAMxGH,oBAAiF;EAA1EI,IAAI,EAAC,UAAU;EAACC,IAAI,EAAC,UAAU;EAACJ,EAAE,EAAC,UAAU;EAACK,WAAW,EAAC;;;;uBARrEC,oBAWM,cAVSC,WAAK,CAACC,QAAQ,kBAAzBF,oBAAyE,OAAzEG,UAAyE,GAAhCV,oBAA0B,6BAApBQ,WAAK,CAACG,OAAO,yDAC5DC,UAA8H,EAC9HZ,oBAOG,+BANHA,oBAAwG;IAAjGI,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,MAAM;IAACJ,EAAE,EAAC,MAAM;IAACK,WAAW,EAAC,0BAA0B;+DAAUE,cAAQ,CAACH,IAAI;iDAAbG,cAAQ,CAACH,IAAI,qBACtGL,oBAA6G;IAAtGI,IAAI,EAAC,OAAO;IAACC,IAAI,EAAC,OAAO;IAACJ,EAAE,EAAC,OAAO;IAACK,WAAW,EAAC,2BAA2B;+DAAUE,cAAQ,CAACK,KAAK;iDAAdL,cAAQ,CAACK,KAAK,qBAC3Gb,oBAAqE;IAA9DI,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,UAAU;IAACJ,EAAE,EAAC,MAAM;+DAAUO,cAAQ,CAACH,IAAI;iDAAbG,cAAQ,CAACH,IAAI,qBACnEL,oBAA4F;IAArFI,IAAI,EAAC,UAAU;IAACC,IAAI,EAAC,OAAO;IAACJ,EAAE,EAAC,OAAO;IAACK,WAAW,EAAC,OAAO;+DAAUE,cAAQ,CAACM,KAAK;iDAAdN,cAAQ,CAACM,KAAK,KAC1FC,UAAiF,EACjFf,oBAAyE;IAAjEI,IAAI,EAAC,QAAQ;IAAEY,OAAK,yCAAEC,uDAAY;KAAE,gBAAoB","names":["class","_createElementVNode","id","width","src","type","name","placeholder","_createElementBlock","$data","validate","_hoisted_1","message","_hoisted_2","email","senha","_hoisted_3","onClick","$options"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\PinkSour\\frontend\\src\\views\\CadastroView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div v-if=\"error.validate\" class=\"error\"><h2>{{error.message}}</h2></div>\r\n        <h1><img id=\"garrafa\" width=\"160px\" src=\"/img/black.png\">Cadastre-se<img id=\"garrafa\" width=\"160px\" src=\"/img/black.png\"></h1>\r\n        <form>\r\n        <input type=\"text\" name=\"nome\" id=\"nome\" placeholder=\"Digite o nome do usu치rio\" v-model=\"formData.name\">\r\n        <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Digite o email do usu치rio\" v-model=\"formData.email\">\r\n        <input type=\"date\" name=\"datanasc\" id=\"data\" v-model=\"formData.name\">\r\n        <input type=\"password\" name=\"senha\" id=\"senha\" placeholder=\"Senha\" v-model=\"formData.senha\">\r\n        <input type=\"password\" name=\"repsenha\" id=\"repsenha\" placeholder=\"Repetir senha\">\r\n        <button type=\"button\" @click=\"registerUser\">&lt; Cadastrar /&gt;</button>\r\n    </form>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\n// var titulo = document.querySelector(\".titulo\");\r\n// titulo.textContent = \"Pink Sour | Cardapio\";\r\n\r\nexport default {\r\n    name: 'Cadastro',\r\n    \r\n    data(){\r\n        return {\r\n            formData:{},\r\n            error: {\r\n                validate:false,\r\n                message:'',\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        registerUser() {\r\n           axios.post(`${process.env.VUE_APP_URL}api/register`,this.formData).then((response)=>{\r\n            this.error.validate = false\r\n            window.location.href = '/login'\r\n           })\r\n           .catch((error)=>{\r\n            this.error.validate = true\r\n            this.error.message = error.response.data.message\r\n           })\r\n        }\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}